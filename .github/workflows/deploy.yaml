name: Build and deploy

on:
  push:
    branches-ignore:
      - "dependabot/**"

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Cache node_modules
        uses: actions/cache@v4
        id: node_modules
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - uses: actions/setup-node@v6
        if: steps.node_modules.outputs.cache-hit != 'true'
        with:
          node-version: "20.x"
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"

      - run: npm ci --ignore-scripts
        if: steps.node_modules.outputs.cache-hit != 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

  build:
    needs: [install]
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
      packages: write
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v6
        with:
          node-version: "22.x"
      - name: docker-build-push
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: teamdagpenger
          push_image: true
          dockerfile: Dockerfile
          docker_context: .
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          build_secrets: NODE_AUTH_TOKEN=${{ secrets.READER_TOKEN }}
      - name: Build static files
        uses: docker/build-push-action@v6
        with:
          target: export
          outputs: type=local,dest=build
          secrets: NODE_AUTH_TOKEN=${{ secrets.READER_TOKEN }}
      - name: Upload static files
        uses: nais/deploy/actions/cdn-upload/v2@master
        with:
          team: teamdagpenger
          source: ./build/client
          destination: "/dp-brukerdialog-frontend/"
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

  deploy-dev:
    needs: [build]
    runs-on: ubuntu-latest
    environment: dev-gcp
    steps:
      - uses: actions/checkout@v5
      - uses: nais/deploy/actions/deploy@v2
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yaml
          VAR: image=${{ needs.build.outputs.image }}
          VARS: .nais/vars-dev.yaml
          PRINT_PAYLOAD: true

  # deploy-prod:
  #   needs: [build]
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   environment: prod-gcp
  #   steps:
  #     - uses: actions/checkout@v5
  #     - uses: nais/deploy/actions/deploy@v2
  #       env:
  #         APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
  #         CLUSTER: prod-gcp
  #         RESOURCE: .nais/nais.yaml
  #         VAR: image=${{ needs.build.outputs.image }}
  #         VARS: .nais/vars-prod.yaml
  #         PRINT_PAYLOAD: true
